# -*- coding: utf-8 -*-
"""Gravity Forward Modelling.py

Automatically generated by Colab.

"""

# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Sabarinath M D



import numpy as np
import rasterio
import matplotlib.pyplot as plt


center_lon, center_lat = 70.2333, 18.6667
R_i = 12.592 / 2
R_o = 251.844 / 2
n_bins = 200


src = rasterio.open("gravity.tif")
g = src.read(1).astype(float)
g[g == src.nodata] = np.nan


rows = np.arange(src.height)
cols = np.arange(src.width)
cols2d, rows2d = np.meshgrid(cols, rows)
lons, lats = rasterio.transform.xy(src.transform, rows2d, cols2d)
lons = np.array(lons)
lats = np.array(lats)



dx = (lons - center_lon) * 111.0 * np.cos(np.deg2rad(center_lat))
dy = (lats - center_lat) * 111.0
r2d = np.sqrt(dx**2 + dy**2)


r = r2d.ravel()
grav = g.ravel()


rbins = np.linspace(0, R_o * 1.2, n_bins + 1)
rcent = 0.5 * (rbins[:-1] + rbins[1:])
obs_prof = [
    np.nanmean(grav[(r >= rbins[i]) & (r < rbins[i+1])])
    for i in range(n_bins)
]


obs_prof = np.array(obs_prof)
lower = obs_prof * 0.90
upper = obs_prof * 1.10


fig, ax = plt.subplots(figsize=(8, 4.5))

ax.fill_between(rcent, lower, upper,
                color="tab:blue", alpha=0.5,
                label="±10 % confidence")

ax.plot(rcent, obs_prof, color="tab:red", linewidth=1,
        label="Observed Δg (raw)")

ax.axvline(R_o, color="C4", linestyle="--", label=f"Outer R ≈ {R_o:.0f} km")


ax.set_xlim(0, R_o * 1.2)
ax.set_xlabel("Radius from center (km)")
ax.set_ylabel("Δg (mGal)")
ax.grid(color="0.85", linewidth=0.5)
ax.legend(loc="upper right", frameon=False)

plt.title("Free Air Anomaly Profile")
plt.tight_layout()
plt.show()
